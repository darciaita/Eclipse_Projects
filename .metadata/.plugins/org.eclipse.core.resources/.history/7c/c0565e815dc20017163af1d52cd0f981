/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package simple.database.pkg001.engine;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Properties;

/**
 *
 * @author Tutor
 */
public class Database {

// init database constants
    private static final String DATABASE_DRIVER = "com.mysql.jdbc.Driver";
    private static final String DATABASE_URL = "jdbc:mysql://localhost:3306/database_name";
    private static final String USERNAME = "root";
    private static final String PASSWORD = "";
    private static final String MAX_POOL = "250";

    // init connection object
    private Connection conn;
    // init properties object
    private Properties properties;

    public Database() {

    }

    public void openConnection() {

        try {
            Class.forName(DATABASE_DRIVER);
        } catch (ClassNotFoundException ex) {
            System.out.println(ex);
        }

        try {
            conn = DriverManager.getConnection(DATABASE_URL, USERNAME, PASSWORD);
        } catch (SQLException ex) {
            //handle any errors
            System.out.println("SQLException: " + ex.getMessage());
            System.out.println("SQLState: " + ex.getSQLState());
            System.out.println("VendorError: " + ex.getErrorCode());

        }
        System.out.println("Database  connection opened");

    }

    public void disconnect() {
        if (conn != null) {
            try {
                conn.close();
                conn = null;
            } catch (SQLException e) {
                System.out.println(e);
            }
        }
    }

    public ResultSet getData() {

        ResultSet rs = null;
        try {

            Statement stmt = conn.createStatement();
            rs = stmt.executeQuery("select * from emp");
            while (rs.next()) {
                System.out.println(rs.getInt(1) + "  " + rs.getString(2) + "  " + rs.getString(3));
            }
        } catch (Exception e) {
            System.out.println(e);
        }

        return rs;
    }

    public UserInfo getDataTest(String sql) {

        UserInfo info = new UserInfo();
        int i = 0;
       
            while (i < 1) {
                info.setId(i);
                info.setAge(Integer.parseInt("10"));
                info.setFirst("Jana");
                info.setLast("Smith");

                i++;

            }
        

        return info;
    }

    
    public ResultSet getData(String sql) {

       ResultSet rs= null;
        int i = 0;
        try {

            Statement stmt = conn.createStatement();
            rs = stmt.executeQuery(sql);
            
        } catch (NumberFormatException | SQLException e) {
            System.out.println(e);
        }

        return rs;
    }

    // create properties
    public Properties getProperties() {
        if (properties == null) {
            properties = new Properties();
            properties.setProperty("user", USERNAME);
            properties.setProperty("password", PASSWORD);
            properties.setProperty("MaxPooledStatements", MAX_POOL);
        }
        return properties;
    }

    public Statement createStatement(String sql) {
        Statement stmt = null;
        try {
            stmt = conn.prepareStatement(sql);
        } catch (SQLException ex) {
            System.out.println(ex);
        }
        return stmt;
    }
}
